load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# c++

http_archive(
    name = "rules_cc",
    sha256 = "3d9e271e2876ba42e114c9b9bc51454e379cbf0ec9ef9d40e2ae4cec61a31b40",
    strip_prefix = "rules_cc-0.0.6",
    urls = ["https://github.com/bazelbuild/rules_cc/releases/download/0.0.6/rules_cc-0.0.6.tar.gz"],
)

load("@rules_cc//cc:repositories.bzl", "rules_cc_dependencies", "rules_cc_toolchains")

rules_cc_dependencies()

rules_cc_toolchains()

# protobuf
http_archive(
    name = "rules_proto",
    sha256 = "dc3fb206a2cb3441b485eb1e423165b231235a1ea9b031b4433cf7bc1fa460dd",
    strip_prefix = "rules_proto-5.3.0-21.7",
    urls = [
        "https://github.com/bazelbuild/rules_proto/archive/refs/tags/5.3.0-21.7.tar.gz",
    ],
)

load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")

rules_proto_dependencies()

rules_proto_toolchains()

# openssl
git_repository(
    name = "boringssl",
    commit = "ac11de2b3ca0d63d5c8c7a361e21c8590fa98d2a",
    remote = "https://boringssl.googlesource.com/boringssl",
)

# TODO: Figure out how to use system openssl. For now, just use
# BoringSSL since that ships a Bazel build.
bind(
    name = "openssl",
    actual = "@boringssl//:crypto",
)

# libutil for forkpty
new_local_repository(
    name = "linux_libs",
    build_file_content = """
cc_library(
	name = "util",
	srcs = ["libutil.so"],
	visibility = ["//visibility:public"],
)
cc_library(
	name = "tinfo",
	srcs = ["libtinfo.so"],
	visibility = ["//visibility:public"],
)
cc_library(
	name = "utempter",
	srcs = ["libutempter.so"],
	visibility = ["//visibility:public"],
)
""",
    path = "/usr/lib/x86_64-linux-gnu",
)
